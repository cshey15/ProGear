"use strict";var ApplicationConfiguration=function(){var applicationModuleName="progear",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("gears"),ApplicationConfiguration.registerModule("linkGearRequests"),ApplicationConfiguration.registerModule("pros"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("gears").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Gears","gears","dropdown","/gears(/create)?"),Menus.addSubMenuItem("topbar","gears","List Gears","gears"),Menus.addSubMenuItem("topbar","gears","New Gear","gears/create")}]),angular.module("gears").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGears",{url:"/gears?unpublishedonly",templateUrl:"modules/gears/views/list-gears.client.view.html"}).state("createGear",{url:"/gears/create",templateUrl:"modules/gears/views/create-gear.client.view.html"}).state("viewGear",{url:"/gears/:gearId",templateUrl:"modules/gears/views/view-gear.client.view.html"}).state("editGear",{url:"/gears/:gearId/edit",templateUrl:"modules/gears/views/edit-gear.client.view.html"}).state("listGearsAdmin",{url:"/admin/gears?unpublishedonly",templateUrl:"modules/gears/views/list-gears-admin.client.view.html"})}]);var app=angular.module("gears");app.controller("GearsController",["$scope","$stateParams","$location","Authentication","Gears","$modal",function($scope,$stateParams,$location,Authentication,Gears,$modal){$scope.authentication=Authentication,$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize},$scope.gearTypes=[{id:1,name:"Keyboard"},{id:2,name:"Mouse"}],$scope.selectedGearType=null,$scope.selectedTypeFilter=void 0,$scope.setFilterGearType=function(value){$scope.selectedTypeFilter===value?$scope.selectedTypeFilter=void 0:$scope.selectedTypeFilter=value},$scope.byType=function(entry){return void 0===$scope.selectedTypeFilter||entry.type===$scope.selectedTypeFilter},$scope.create=function(){var gear=new Gears.resource({name:this.name,type:$scope.selectedGearType.name,amazonLink:this.amazonLink,website:this.website});gear.$save(function(response){$location.path("gears/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(gear){if(confirm("Are you sure you want to delete?"))if(gear){gear.$remove();for(var i in $scope.gears)$scope.gears[i]===gear&&$scope.gears.splice(i,1)}else $scope.gear.$remove(function(){$location.path("gears")})},$scope.update=function(){var gear=$scope.gear;gear.$update(function(){$location.path("gears/"+gear._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$stateParams.unpublishedonly&&"true"===$stateParams.unpublishedonly?$scope.gears=Gears.admin.query():$scope.gears=Gears.resource.query()},$scope.findOne=function(){$scope.gear=Gears.resource.get({gearId:$stateParams.gearId}),$scope.relatedPros=Gears.getProsForGear($stateParams.gearId)},$scope.gearSearch=function(product){$location.path("gears/"+product._id)},$scope.openCreate=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"modules/gears/views/modalCreate-gear.client.view.html",controller:"GearsController.modal",size:"sm"});modalInstance.result.then(function(newGear){$scope.find()},function(){})},$scope.shouldRender=function(user){if(user)for(var userRoleIndex in user.roles)if("admin"===user.roles[userRoleIndex])return!0;return!1}}]),app.controller("GearsController.modal",["$scope","Gears","$modalInstance",function($scope,Gears,$modalInstance){$scope.selected={gear:null},$scope.gears=Gears.resource.query(),$scope.ok=function(){$modalInstance.close($scope.selected.gear)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.modalSubmit=function(data){var gear=new Gears.resource({name:data.name,type:data.selectedGearType.name,amazonLink:data.amazonLink,website:data.website});gear.$save(function(response){$modalInstance.close(gear)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.gearSearch=function(product){$scope.selected.gear=product}}]),angular.module("gears").factory("Gears",["$resource",function($resource){var resource=$resource("gears/:gearId",{gearId:"@_id"},{update:{method:"PUT"}});return{resource:resource,admin:$resource("admin/gears/unpublished/:gearId",{gearId:"@_id"},{update:{method:"PUT"}}),getProsForGear:function(id){return $resource("gears/:gearId/pros",{gearId:id}).query()}}}]),angular.module("linkGearRequests").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Admin","linkGearRequests","dropdown","/linkGearRequests(/create)?",!1,["admin"],1),Menus.addSubMenuItem("topbar","linkGearRequests","List LinkGearRequests","linkGearRequests"),Menus.addSubMenuItem("topbar","linkGearRequests","List Unpublished pros","admin/pros?unpublishedonly=true"),Menus.addSubMenuItem("topbar","linkGearRequests","List Unpublished gears","admin/gears?unpublishedonly=true")}]),angular.module("linkGearRequests").config(["$stateProvider",function($stateProvider){$stateProvider.state("listLinkGearRequests",{url:"/linkGearRequests",templateUrl:"modules/linkGearRequests/views/list-linkGearRequests.client.view.html"}).state("createLinkGearRequest",{url:"/linkGearRequests/create/:proId",templateUrl:"modules/linkGearRequests/views/create-linkGearRequest.client.view.html"}).state("viewLinkGearRequest",{url:"/linkGearRequests/:linkGearRequestId",templateUrl:"modules/linkGearRequests/views/view-linkGearRequest.client.view.html"}).state("editLinkGearRequest",{url:"/linkGearRequests/:linkGearRequestId/edit",templateUrl:"modules/linkGearRequests/views/edit-linkGearRequest.client.view.html"})}]),angular.module("linkGearRequests").controller("LinkGearRequestsController",["$scope","$stateParams","$location","Authentication","LinkGearRequests",function($scope,$stateParams,$location,Authentication,LinkGearRequests){$scope.authentication=Authentication,$scope.create=function(){var linkGearRequest=new LinkGearRequests({name:this.name});linkGearRequest.$save(function(response){$location.path("linkGearRequests/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(linkGearRequest){if(linkGearRequest){linkGearRequest.$remove();for(var i in $scope.linkGearRequests)$scope.linkGearRequests[i]===linkGearRequest&&$scope.linkGearRequests.splice(i,1)}else $scope.linkGearRequest.$remove(function(){$location.path("linkGearRequests")})},$scope.update=function(){var linkGearRequest=$scope.linkGearRequest;linkGearRequest.$update(function(){$location.path("linkGearRequests/"+linkGearRequest._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.linkGearRequests=LinkGearRequests.query()},$scope.findOne=function(){$scope.linkGearRequest=LinkGearRequests.get({linkGearRequestId:$stateParams.linkGearRequestId})},$scope.setStatus=function(linkGearRequest,status){linkGearRequest.status!==status&&(linkGearRequest.status=status,linkGearRequest.$update(function(response){$scope.message=status+" successful!"},function(errorResponse){$scope.error=errorResponse.data.message}))}}]),angular.module("linkGearRequests").factory("LinkGearRequests",["$resource",function($resource){return $resource("linkGearRequests/:linkGearRequestId",{linkGearRequestId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pros").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Pros","pros","dropdown","/pros(/create)?"),Menus.addSubMenuItem("topbar","pros","List Pros","pros"),Menus.addSubMenuItem("topbar","pros","New Pro","pros/create")}]),angular.module("pros").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPros",{url:"/pros?unpublishedonly",templateUrl:"modules/pros/views/list-pros.client.view.html"}).state("createPro",{url:"/pros/create",templateUrl:"modules/pros/views/create-pro.client.view.html"}).state("viewPro",{url:"/pros/:proId",templateUrl:"modules/pros/views/view-pro.client.view.html"}).state("addGear",{url:"/pros/:proId/addGear?type",templateUrl:"modules/pros/views/addGear-pro.client.view.html"}).state("editPro",{url:"/pros/:proId/edit",templateUrl:"modules/pros/views/edit-pro.client.view.html"}).state("listProsAdmin",{url:"/admin/pros?unpublishedonly",templateUrl:"modules/pros/views/list-pros-admin.client.view.html"})}]);var app=angular.module("pros");app.controller("ProsController",["$scope","$stateParams","$location","Authentication","Pros","Gears","$modal","LinkGearRequests","Menus","Upload",function($scope,$stateParams,$location,Authentication,Pros,Gears,$modal,LinkGearRequests,Menus,Upload){$scope.authentication=Authentication,$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize},$scope.selectedSportFilter=void 0,$scope.setSelectedSportFilter=function(value){$scope.selectedSportFilter===value?$scope.selectedSportFilter=void 0:$scope.selectedSportFilter=value},$scope.sportFilter=function(item){return void 0===$scope.selectedSportFilter||item.sport===$scope.selectedSportFilter},$scope.selectedTeamFilter=void 0,$scope.setSelectedTeamFilter=function(value){$scope.selectedTeamFilter===value?$scope.selectedTeamFilter=void 0:$scope.selectedTeamFilter=value},$scope.teamFilter=function(item){return void 0===$scope.selectedTeamFilter||item.team===$scope.selectedTeamFilter},$scope.create=function(){var pro=new Pros.resource({name:this.name,sport:this.sport,team:this.team,alias:this.alias,fbProfile:this.fbProfile,website:this.website});pro.$save(function(response){$location.path("pros/"+response._id),$scope.upload($scope.file),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.upload=function(file,proid){Upload.upload({url:"api/upload/",method:"POST",data:{type:"pro",id:proid},file:file})},$scope.remove=function(pro){if(confirm("Are you sure you want to delete?"))if(pro){pro.$remove();for(var i in $scope.pros)$scope.pros[i]===pro&&$scope.pros.splice(i,1)}else $scope.pro.$remove(function(){$location.path("pros")})},$scope.update=function(){var pro=$scope.pro;pro.$update(function(){$location.path("pros/"+pro._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$stateParams.unpublishedonly&&"true"===$stateParams.unpublishedonly?$scope.pros=Pros.admin.query():$scope.pros=Pros.resource.query()},$scope.findOne=function(){$scope.pro=Pros.resource.get({proId:$stateParams.proId}),$scope.gearList=Pros.getGearsForPro($stateParams.proId)},$scope.proSearch=function(product){$location.path("pros/"+product._id)},$scope.open=function(size){var modalInstance=$modal.open({animation:!0,templateUrl:"modules/gears/views/modalList-gear.client.view.html",controller:"GearsController.modal",size:size});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem;var contains=!1;for(var i in $scope.pro.gearList)$scope.pro.gearList[i]._id===selectedItem._id&&(contains=!0);contains||$scope.pro.gearList.push(selectedItem)},function(){})},$scope.addGear=function(){$scope.pro=Pros.resource.get({proId:$stateParams.proId}),$scope.type=$stateParams.type,$scope.gears=Gears.resource.query()},$scope.gearSelect=function(item){$scope.selectedGear=item},$scope.createRequest=function(){var request=new LinkGearRequests({pro:$scope.pro._id,gear:$scope.selectedGear._id,proofLink:this.proofLink,explanation:this.explanation});request.$save(function(response){$scope.pro.requestList.push(response),$scope.pro.$update(function(response){$location.path("pros/"+response._id),$scope.search="",$scope.proofLink="",$scope.explanation=""},function(errorResponse){$scope.error=errorResponse.data.message})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.openCreate=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"modules/pros/views/modalCreate-pro.client.view.html",controller:"ProsController.modal",size:"sm"});modalInstance.result.then(function(){$scope.find()},function(){})},$scope.openCreateGear=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"modules/gears/views/modalCreate-gear.client.view.html",controller:"GearsController.modal",size:"sm"});modalInstance.result.then(function(gear){$scope.selectedGear=gear},function(){})},$scope.shouldRender=function(user){if(user)for(var userRoleIndex in user.roles)if("admin"===user.roles[userRoleIndex])return!0;return!1},$scope.removeGear=function(gear){for(var i in $scope.pro.gearList)$scope.pro.gearList[i]===gear&&$scope.pro.gearList.splice(i,1)}}]),app.controller("ProsController.modal",["$scope","Pros","$modalInstance",function($scope,Pros,$modalInstance){$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.modalSubmit=function(data){var pro=new Pros({name:data.name,team:data.team});pro.$save(function(response){$modalInstance.close()},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("pros").factory("Pros",["$resource",function($resource){return{resource:$resource("pros/:proId",{proId:"@_id"},{update:{method:"PUT"}}),admin:$resource("admin/pros/unpublished/:proId",{proId:"@_id"},{update:{method:"PUT"}}),getGearsForPro:function(id){return $resource("pros/:proId/gears",{proId:id}).query()}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);